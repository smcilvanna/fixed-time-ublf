function [  dist_err_rms_fxt,   dist_err_rms_ablf,  dist_err_rms_bs, ...
            dist_err_pk_fxt,    dist_err_pk_ablf,   dist_err_pk_bs, ...
            dist_err_tot_fxt,   dist_err_tot_ablf,  dist_err_tot_bs ] = process_err(d_source,dist_start)
%process_err    Generate rms average, peak, and total error over disturbance
%               peroid (starting @ time(ms) dist_start


    %{
        run_data.TrackingError.signals(d).values(r,c) :
        Channels d: 1 - X direction X1(1)
                    2 - y direction X1(2)
                    3 - hdg X1(3)


        Columns:    1 - Lower Limit
                    2 - Upper Limit
                    3 - ABLF tracking error
                    4 - FxT UBLF tracking error
                    5 - Backstepping tracking error

%}

    % rms error
    dist_err_rms_fxt        = [ rms(d_source(1).values(dist_start:end,4)), ...
                                rms(d_source(2).values(dist_start:end,4)), ...
                                rms(d_source(3).values(dist_start:end,4)) ];
                    
    dist_err_rms_ablf       = [ rms(d_source(1).values(dist_start:end,3)),...
                                rms(d_source(2).values(dist_start:end,3)),...
                                rms(d_source(3).values(dist_start:end,3)) ];
 
    dist_err_rms_bs         = [ rms(d_source(1).values(dist_start:end,5)),...
                                rms(d_source(2).values(dist_start:end,5)),...
                                rms(d_source(3).values(dist_start:end,5)) ]; 
                    
    % peak error
    dist_err_pk_fxt         = [ max(max(d_source(1).values(dist_start:end,4)), abs( min( d_source(1).values(dist_start:end,4) ) ) ), ...
                                max(max(d_source(2).values(dist_start:end,4)), abs( min( d_source(2).values(dist_start:end,4) ) ) ), ...
                                max(max(d_source(3).values(dist_start:end,4)), abs( min( d_source(3).values(dist_start:end,4) ) ) ) ];
                    
    dist_err_pk_ablf        = [ max(max(d_source(1).values(dist_start:end,3)), abs( min( d_source(1).values(dist_start:end,3) ) ) ),...
                                max(max(d_source(2).values(dist_start:end,3)), abs( min( d_source(2).values(dist_start:end,3) ) ) ),...
                                max(max(d_source(3).values(dist_start:end,3)), abs( min( d_source(3).values(dist_start:end,3) ) ) ) ];
                    
    dist_err_pk_bs          = [ max(max(d_source(1).values(dist_start:end,5)), abs( min( d_source(1).values(dist_start:end,5) ) ) ), ...
                                max(max(d_source(2).values(dist_start:end,5)), abs( min( d_source(2).values(dist_start:end,5) ) ) ), ...
                                max(max(d_source(3).values(dist_start:end,5)), abs( min( d_source(3).values(dist_start:end,5) ) ) ) ];
                            
    % total error
    dist_err_tot_fxt        = [ sum(abs( d_source(1).values(dist_start:end,4) ) ), ...
                                sum(abs( d_source(2).values(dist_start:end,4) ) ), ...
                                sum(abs( d_source(3).values(dist_start:end,4) ) ) ];
                            
    dist_err_tot_ablf       = [ sum(abs( d_source(1).values(dist_start:end,3) ) ), ...
                                sum(abs( d_source(2).values(dist_start:end,3) ) ), ...
                                sum(abs( d_source(3).values(dist_start:end,3) ) ) ];
                            
    dist_err_tot_bs         = [ sum(abs( d_source(1).values(dist_start:end,5) ) ), ...
                                sum(abs( d_source(2).values(dist_start:end,5) ) ), ...
                                sum(abs( d_source(3).values(dist_start:end,5) ) ) ];
            
            
end

